# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import inventory_pb2 as inventory__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in inventory_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class InventoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddPart = channel.unary_unary(
                '/inventoryPackage.InventoryService/AddPart',
                request_serializer=inventory__pb2.AddPartRequest.SerializeToString,
                response_deserializer=inventory__pb2.AddPartResponse.FromString,
                _registered_method=True)
        self.AddRepairType = channel.unary_unary(
                '/inventoryPackage.InventoryService/AddRepairType',
                request_serializer=inventory__pb2.AddRepairTypeRequest.SerializeToString,
                response_deserializer=inventory__pb2.AddRepairTypeResponse.FromString,
                _registered_method=True)
        self.GetRepairTypes = channel.unary_unary(
                '/inventoryPackage.InventoryService/GetRepairTypes',
                request_serializer=inventory__pb2.Empty.SerializeToString,
                response_deserializer=inventory__pb2.GetRepairTypesResponse.FromString,
                _registered_method=True)
        self.CheckPartsAvailability = channel.unary_unary(
                '/inventoryPackage.InventoryService/CheckPartsAvailability',
                request_serializer=inventory__pb2.CheckPartsRequest.SerializeToString,
                response_deserializer=inventory__pb2.CheckPartsResponse.FromString,
                _registered_method=True)
        self.ReserveParts = channel.unary_unary(
                '/inventoryPackage.InventoryService/ReserveParts',
                request_serializer=inventory__pb2.ReservePartsRequest.SerializeToString,
                response_deserializer=inventory__pb2.ReservePartsResponse.FromString,
                _registered_method=True)
        self.GetRequiredParts = channel.unary_unary(
                '/inventoryPackage.InventoryService/GetRequiredParts',
                request_serializer=inventory__pb2.GetRequiredPartsRequest.SerializeToString,
                response_deserializer=inventory__pb2.GetRequiredPartsResponse.FromString,
                _registered_method=True)
        self.ManageStockLevels = channel.unary_unary(
                '/inventoryPackage.InventoryService/ManageStockLevels',
                request_serializer=inventory__pb2.ManageStockLevelsRequest.SerializeToString,
                response_deserializer=inventory__pb2.ManageStockLevelsResponse.FromString,
                _registered_method=True)
        self.UpdateRepairType = channel.unary_unary(
                '/inventoryPackage.InventoryService/UpdateRepairType',
                request_serializer=inventory__pb2.UpdateRepairTypeRequest.SerializeToString,
                response_deserializer=inventory__pb2.UpdateRepairTypeResponse.FromString,
                _registered_method=True)
        self.UpdatePart = channel.unary_unary(
                '/inventoryPackage.InventoryService/UpdatePart',
                request_serializer=inventory__pb2.UpdatePartRequest.SerializeToString,
                response_deserializer=inventory__pb2.UpdatePartResponse.FromString,
                _registered_method=True)


class InventoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddPart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRepairType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRepairTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPartsAvailability(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReserveParts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRequiredParts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManageStockLevels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRepairType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddPart': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPart,
                    request_deserializer=inventory__pb2.AddPartRequest.FromString,
                    response_serializer=inventory__pb2.AddPartResponse.SerializeToString,
            ),
            'AddRepairType': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRepairType,
                    request_deserializer=inventory__pb2.AddRepairTypeRequest.FromString,
                    response_serializer=inventory__pb2.AddRepairTypeResponse.SerializeToString,
            ),
            'GetRepairTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRepairTypes,
                    request_deserializer=inventory__pb2.Empty.FromString,
                    response_serializer=inventory__pb2.GetRepairTypesResponse.SerializeToString,
            ),
            'CheckPartsAvailability': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPartsAvailability,
                    request_deserializer=inventory__pb2.CheckPartsRequest.FromString,
                    response_serializer=inventory__pb2.CheckPartsResponse.SerializeToString,
            ),
            'ReserveParts': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveParts,
                    request_deserializer=inventory__pb2.ReservePartsRequest.FromString,
                    response_serializer=inventory__pb2.ReservePartsResponse.SerializeToString,
            ),
            'GetRequiredParts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRequiredParts,
                    request_deserializer=inventory__pb2.GetRequiredPartsRequest.FromString,
                    response_serializer=inventory__pb2.GetRequiredPartsResponse.SerializeToString,
            ),
            'ManageStockLevels': grpc.unary_unary_rpc_method_handler(
                    servicer.ManageStockLevels,
                    request_deserializer=inventory__pb2.ManageStockLevelsRequest.FromString,
                    response_serializer=inventory__pb2.ManageStockLevelsResponse.SerializeToString,
            ),
            'UpdateRepairType': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRepairType,
                    request_deserializer=inventory__pb2.UpdateRepairTypeRequest.FromString,
                    response_serializer=inventory__pb2.UpdateRepairTypeResponse.SerializeToString,
            ),
            'UpdatePart': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePart,
                    request_deserializer=inventory__pb2.UpdatePartRequest.FromString,
                    response_serializer=inventory__pb2.UpdatePartResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'inventoryPackage.InventoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('inventoryPackage.InventoryService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InventoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddPart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/AddPart',
            inventory__pb2.AddPartRequest.SerializeToString,
            inventory__pb2.AddPartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddRepairType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/AddRepairType',
            inventory__pb2.AddRepairTypeRequest.SerializeToString,
            inventory__pb2.AddRepairTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRepairTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/GetRepairTypes',
            inventory__pb2.Empty.SerializeToString,
            inventory__pb2.GetRepairTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckPartsAvailability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/CheckPartsAvailability',
            inventory__pb2.CheckPartsRequest.SerializeToString,
            inventory__pb2.CheckPartsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReserveParts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/ReserveParts',
            inventory__pb2.ReservePartsRequest.SerializeToString,
            inventory__pb2.ReservePartsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRequiredParts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/GetRequiredParts',
            inventory__pb2.GetRequiredPartsRequest.SerializeToString,
            inventory__pb2.GetRequiredPartsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ManageStockLevels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/ManageStockLevels',
            inventory__pb2.ManageStockLevelsRequest.SerializeToString,
            inventory__pb2.ManageStockLevelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRepairType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/UpdateRepairType',
            inventory__pb2.UpdateRepairTypeRequest.SerializeToString,
            inventory__pb2.UpdateRepairTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inventoryPackage.InventoryService/UpdatePart',
            inventory__pb2.UpdatePartRequest.SerializeToString,
            inventory__pb2.UpdatePartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
