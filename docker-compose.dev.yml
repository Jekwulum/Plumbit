networks:
  plumbit-network:
    driver: bridge

services:
  postgres:
    image: postgres:15.1-alpine
    container_name: postgres
    expose:
      - "5432"
    hostname: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespass
      POSTGRES_DB: plumbit_reservation
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: unless-stopped
    networks:
      - plumbit-network
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
      - ./mongod.conf:/etc/mongod.conf
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    command: ["mongod", "--config", "/etc/mongod.conf"]
    restart: unless-stopped
    networks:
      - plumbit-network

  api-gateway:
    build:
      context: ./apiGateway/
      dockerfile: Dockerfile
      target: base
    container_name: api-gateway
    expose:
      - '4000'
    ports:
      - '4000:4000'
    environment:
      - ENVIRONMENT:docker
    env_file:
      - ./apiGateway/docker.env
    volumes:
      - ./apiGateway:/app
    depends_on:
      - reservation-service
      - notification-service
      - inventory-service
      - user-service
    command: npm run dev
    restart: unless-stopped
    networks:
      - plumbit-network

  inventory-service:
    build:
      context: ./inventoryService/
      dockerfile: Dockerfile
    container_name: inventory-service
    expose:
      - '4003'
    depends_on:
      - postgres
    ports:
      - '4003:4003'
    environment:
      - ENVIRONMENT:docker
    env_file:
      - ./inventoryService/docker.env
    volumes:
    - ./inventoryService:/app
    restart: unless-stopped
    networks:
      - plumbit-network
    
  notification-service:
    build:
      context: ./notificationService/
      dockerfile: Dockerfile
    container_name: notification-service
    expose:
      - '4004'
    depends_on:
      - mongodb
    ports:
      - '4004:4004'
    environment:
      - ENVIRONMENT:docker
    env_file:
      - ./notificationService/docker.env
    volumes:
      - ./notificationService:/app
      - notification-service-data:/app/data
    restart: unless-stopped
    networks:
      - plumbit-network

  reservation-service:
    build:
      context: ./reservationService/
      dockerfile: Dockerfile
    container_name: reservation-service
    expose:
      - '4002'
    depends_on:
      - postgres
      - notification-service
      - inventory-service
    ports:
      - '4002:4002'
    environment:
      - ENVIRONMENT:docker
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=plumbit_reservation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespass
    env_file:
      - ./reservationService/docker.env
    volumes:
    - ./reservationService:/app
    restart: unless-stopped
    networks:
      - plumbit-network
  
  user-service:
    build:
      context: ./userService/
      dockerfile: Dockerfile
    container_name: user-service
    expose:
      - '4001'
    depends_on:
      - mongodb
    ports:
      - '4001:4001'
    environment:
      - ENVIRONMENT:docker
    env_file:
      - ./userService/docker.env
    volumes:
    - ./userService:/app
    restart: unless-stopped
    networks:
      - plumbit-network

volumes:
  pgdata:
  mongo-data:
  notification-service-data:
  user-service-data: